package Booking;

import database.DatabaseConnection;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class BookingManagement extends JPanel {
    private JTable tableBookings;
    private JButton btnAddBooking, btnEditBooking, btnDeleteBooking, btnPayBooking;

    public BookingManagement() {
        setLayout(new BorderLayout());

        tableBookings = new JTable();
        JScrollPane scrollPane = new JScrollPane(tableBookings);
        add(scrollPane, BorderLayout.CENTER);

        JPanel panelButtons = new JPanel();
        panelButtons.setLayout(new FlowLayout());

        btnAddBooking = new JButton("Thêm Đặt Tour");
        btnEditBooking = new JButton("Chỉnh Sửa");
        btnDeleteBooking = new JButton("Xóa Đặt Tour");
        btnPayBooking = new JButton("Thanh Toán");

        panelButtons.add(btnAddBooking);
        panelButtons.add(btnEditBooking);
        panelButtons.add(btnDeleteBooking);
        panelButtons.add(btnPayBooking);  // Thêm nút Thanh Toán

        add(panelButtons, BorderLayout.SOUTH);

        loadBookings();

        btnAddBooking.addActionListener(e -> openAddBookingForm());
        btnEditBooking.addActionListener(e -> openEditBookingForm());
        btnDeleteBooking.addActionListener(e -> deleteBooking());
        btnPayBooking.addActionListener(e -> openPaymentForm());  // Mở form thanh toán
    }

    private void loadBookings() {
        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement()) {
            String sql = "SELECT * FROM bookings";
            ResultSet rs = stmt.executeQuery(sql);

            // Update tableBookings with the retrieved data from bookings
            // Note: You may need to customize the table model to display the data correctly
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void openAddBookingForm() {
        AddEditBookingForm addForm = new AddEditBookingForm(this);
        addForm.setVisible(true);
    }

    private void openEditBookingForm() {
        int selectedRow = tableBookings.getSelectedRow();
        if (selectedRow != -1) {
            int bookingId = Integer.parseInt((String) tableBookings.getValueAt(selectedRow, 0));
            String customerName = (String) tableBookings.getValueAt(selectedRow, 1);
            String tourName = (String) tableBookings.getValueAt(selectedRow, 2);
            String bookingDate = (String) tableBookings.getValueAt(selectedRow, 3);
            String paymentStatus = (String) tableBookings.getValueAt(selectedRow, 4);
            String destinationName = (String) tableBookings.getValueAt(selectedRow, 5);
            String guideName = (String) tableBookings.getValueAt(selectedRow, 6);
            double totalPrice = Double.parseDouble((String) tableBookings.getValueAt(selectedRow, 7));

            AddEditBookingForm editForm = new AddEditBookingForm(this, bookingId, customerName, tourName,
                    bookingDate, paymentStatus, destinationName, guideName, totalPrice);
            editForm.setVisible(true);
        }
    }

    private void deleteBooking() {
        int selectedRow = tableBookings.getSelectedRow();
        if (selectedRow != -1) {
            int bookingId = Integer.parseInt((String) tableBookings.getValueAt(selectedRow, 0));

            try (Connection conn = DatabaseConnection.getConnection()) {
                String sql = "DELETE FROM bookings WHERE id_booking = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, bookingId);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Đặt tour đã bị xóa.");
                loadBookings();  // Reload bookings after deletion
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void openPaymentForm() {
        int selectedRow = tableBookings.getSelectedRow();
        if (selectedRow != -1) {
            int bookingId = Integer.parseInt((String) tableBookings.getValueAt(selectedRow, 0));
            PaymentForm paymentForm = new PaymentForm(this, bookingId);
            paymentForm.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một booking để thanh toán");
        }
    }
}
